
### Type-decorated keys
type_decorated_keys_1: 
  - {"my_key:int" : "$abc.def[0]"}
  - my_key:int :
      "$abc.def[0]"

### Meta-decorated keys
meta_decorated_keys:
  - {"my_key::hidden,fromdir('abc/def')" : "$abc.def[0]"}

### Type and meta decorated keys in various syntaxes:
fully_decorated_keys_1: 
  - my_key:int:hidden,fromdir('abc/def') : $abc.def[0]
  - {"my_key:int:hidden,fromdir('abc/def')" : "$abc.def[0]"}
  - "my_key:int:hidden,fromdir('abc/def')" : $abc.def[0]
  - my_key:int:hidden,fromdir('abc/def'):
      $abc.def[0]

### Decorating key nodes, syntax 2:
fully_decorated_keys_2:
  - my_key::fuse:
      type: int,
      modifiers:
        - hidden
        - fromdir('abc/def'), # Use fromdir(cwd('abc/def')) for loads relative to current dir.
      value: value

## A decorated value:
decorated_list_value:
  - 0
  - '::child(int),hidden,choices(1,2,3)' : $int(1)
  - 2

## Decorated containers
decorated_dict:
  ::parent,hidden: null
decorated_list:
  - ::parent,hidden: null

## Examples of other decorators
decoration_examples:
  - my_key:${key}:
      type: int,
      meta: 
        - hidden
        - fromdir('abc/def'), # Use fromdir(cwd('abc/def')) for loads relative to current dir.
        - choices(['subdir1','subdir3']
        - help('Help message'))
      value: value

### Loading files
loaded: 
  - ${load('abc/def')} # Relative to current dir
  - ${load(cwd('abc/def'))} # Relative to working dir
